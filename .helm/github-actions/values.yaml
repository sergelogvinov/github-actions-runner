# Default values for github-actions.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/sergelogvinov/github-actions-runner/github-actions-runner
  pullPolicy: IfNotPresent
  # tag:

envs: {}
  # DOCKER_HOST: tcp://build-machine:2376
  # BUILDKIT_HOST: tcp://build-machine:1234
  # RUNNER_REPOSITORY_URL: https://github.com/sergelogvinov/github-actions-runner
  # RUNNER_TOKEN: ''
  # GITHUB_ACCESS_TOKEN: ''

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
#   container.apparmor.security.beta.kubernetes.io/github-actions-docker: unconfined

podSecurityContext: {}
  # fsGroup: 0
  # fsGroupChangePolicy: "OnRootMismatch"

securityContext:
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
  runAsUser: 1001
  runAsGroup: 0
  capabilities:
    drop: ["ALL"]

resources:
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 200m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 9
  targetUtilizationPercentage: 90
  scaleDown:
    stabilizationWindowSeconds: 600
  scaleUp:
    stabilizationWindowSeconds: 30

docker:
  enabled: false
  image:
    repository: docker
    pullPolicy: IfNotPresent
    tag: 23.0-dind

  mirrors:
    - host: docker.io
      source: https://registry-1.docker.io
    # - host: gcr.io
    #   source: https://gcr.io
    # - host: ghcr.io
    #   source: https://ghcr.io

  # securityContext:
  #   # rawProc: true
  #   # procMount: Unmasked
  #   # seccompProfile:
  #   #   type: Unconfined
  #   privileged: true
  #   runAsUser: 0
  #   runAsGroup: 0

  resources:
    limits:
      cpu: 3
      memory: 8Gi
    requests:
      cpu: 1
      memory: 512Mi

  extraVolumeMounts: []
  ## Additional volumeMounts to the main container.
  #   - name: certs
  #     mountPath: /etc/docker/certs.d/domain.com

  extraVolumes: []
  ## Additional volumes to the pod.
  #   - name: certs
  #     secret:
  #       secretName: domain.com-auth-tls
  #       defaultMode: 288
  #       items:
  #         - key: tls.crt
  #           path: client.cert
  #         - key: tls.key
  #           path: client.key

  persistence:
    enabled: false
    ## A manually managed Persistent Volume and Claim
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:
    # storageClass: "-"
    accessModes:
      - ReadWriteOnce
    size: 100Gi
    annotations: {}

buildkit:
  enabled: false
  image:
    repository: moby/buildkit
    pullPolicy: IfNotPresent
    tag: "buildx-stable-1"

  persistence:
    enabled: false
    ## A manually managed Persistent Volume and Claim
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:
    # storageClass: "-"
    accessModes:
      - ReadWriteOnce
    size: 100Gi
    annotations: {}

registry:
  enabled: false
  name: cache.local

  image:
    repository: registry
    pullPolicy: IfNotPresent
    tag: 2.8

  resources:
    # limits:
    #   cpu: 1
    #   memory: 512Mi
    requests:
      cpu: 100m
      memory: 32Mi

  extraVolumeMounts: []
  extraVolumes: []

  persistence:
    enabled: false
    ## A manually managed Persistent Volume and Claim
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:
    # storageClass: "-"
    accessModes:
      - ReadWriteOnce
    size: 100Gi
    annotations: {}

  nodeSelector: {}
  tolerations: []
  affinity: {}

initScript: ~
  # #!/bin/sh
  # docker buildx create --name builder --driver remote tcp://build-machine:1234 --buildkitd-flags="" --driver-opt cacert=/.certs/ca.pem,cert=/.certs/cert.pem,key=/.certs/key.pem --use

metrics:
  enabled: false

  image:
    repository: ghcr.io/sergelogvinov/github-actions-exporter
    pullPolicy: IfNotPresent
    tag: "v1.9.0-beta"

  securityContext:
    allowPrivilegeEscalation: false
    seccompProfile:
      type: RuntimeDefault
    runAsUser: 65534
    runAsGroup: 65534
    readOnlyRootFilesystem: true
    capabilities:
      drop: ["ALL"]

  resources:
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

  envs:
    EXPORT_FIELDS: repo,head_branch,workflow,event,status
    # GITHUB_TOKEN: Personal Access Token
    # GITHUB_ORGAS: <orga>
    # GITHUB_REPOS: <orga>/<repo>,<orga>/<repo2>
  appKey: ~

  nodeSelector: {}
  tolerations: []
  affinity: {}

nodeSelector: {}

tolerations: []

# soft/hard
podAntiAffinityPreset: soft
affinity: {}

persistence:
  enabled: false
  ## A manually managed Persistent Volume and Claim
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:
  # storageClass: "-"
  accessModes:
    - ReadWriteOnce
  size: 100Gi
  annotations: {}

extraVolumeMounts: []
## Additional volumeMounts to the main container.
#   - name: tlscerts
#     mountPath: /home/github/.docker

extraVolumes: []
## Additional volumes to the pod.
#   - name: tlscerts
#     secret:
#       secretName: cnt-builder
#       defaultMode: 256
#       items:
#         - key: ca.crt
#           path: ca.pem
#         - key: tls.crt
#           path: cert.pem
#         - key: tls.key
#           path: key.pem

## updateStrategy for StatefulSet
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
updateStrategy:
  type: RollingUpdate
