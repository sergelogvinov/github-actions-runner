apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "github-actions.fullname" . }}
  labels:
    {{- include "github-actions.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "github-actions.fullname" . }}
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "github-actions.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "github-actions.selectorLabels" . | nindent 8 }}
    spec:
      enableServiceLinks: false
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "github-actions.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 60
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: RUNNER_WORK_FOLDER
              value: /builds
          envFrom:
            - secretRef:
                name: "{{ include "github-actions.fullname" . }}"
          volumeMounts:
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
            - name: builds
              mountPath: /builds
            - name: run
              mountPath: /run
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.docker.enabled }}
        - name: {{ .Chart.Name }}-docker
          securityContext:
            {{- toYaml .Values.docker.securityContext | nindent 12 }}
          image: "{{ .Values.docker.image.repository }}:{{ .Values.docker.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.docker.image.pullPolicy }}
          command: ["/usr/bin/dockerd","-H","tcp://127.0.0.1:2376"]
          args:
            - --config-file=/etc/docker-config/daemon.json
          volumeMounts:
            - name: config
              mountPath: /etc/docker-config
          {{- if .Values.docker.extraVolumeMounts }}
            {{ toYaml .Values.docker.extraVolumeMounts | nindent 12 }}
          {{- end }}
            - name: workdir
              mountPath: /var/lib/docker
            - name: run
              mountPath: /run
            - name: modules
              mountPath: /lib/modules
              readOnly: true
          resources:
            {{- toYaml .Values.docker.resources | nindent 12 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity: {{- include "affinities.pods" . | nindent 10 }}
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: builds
          emptyDir: {}
        - name: run
          emptyDir:
            medium: Memory
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
      {{- if .Values.docker.enabled }}
        - name: config
          configMap:
            name: {{ include "github-actions.fullname" . }}
      {{- if .Values.docker.extraVolumes }}
        {{ toYaml .Values.docker.extraVolumes | nindent 8 }}
      {{- end }}
        - name: modules
          hostPath:
            path: /lib/modules
      {{- end }}
  {{- if not .Values.docker.persistence.enabled }}
        - name: workdir
          emptyDir: {}
  {{- else if and .Values.docker.persistence.enabled .Values.docker.persistence.existingClaim }}
        - name: workdir
          persistentVolumeClaim:
            claimName: {{ .Values.docker.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: workdir
      {{- with .Values.docker.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.docker.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.docker.persistence.size | quote }}
      {{- if .Values.docker.persistence.storageClass }}
      {{- if (eq "-" .Values.docker.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.docker.persistence.storageClass }}"
      {{- end }}
      {{- end }}
  {{- end }}
